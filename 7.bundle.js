(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{789:function(e,t,r){"use strict";r.d(t,"a",(function(){return s}));var n=r(128),a=r.n(n),o=r(39);function i(e,t,r,n,a,o,i){try{var c=e[o](i),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,a)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var l="Can't upload image",u=function(e){return"".concat(o.a,"/words/").concat(e)},s=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,r,n,s,f;return t=e,r=null,n=[{key:"update",value:function(e){var t=e.wordId,r=e.body;fetch(u(t),{body:r,method:"PUT"}).then((function(e){return e.json()})).then((function(e){return e.id&&a.a.success("Image updated successfully"),e})).catch((function(){a.a.error(l)}))}},{key:"undraft",value:function(e){fetch("".concat(o.a,"/words/undraft/").concat(e),{method:"GET"}).then((function(e){return e.json()})).then((function(e){return e.id&&a.a.success("Moved to the words list"),e})).catch((function(){a.a.error("Cannot move to the words list")}))}},{key:"updateJSON",value:function(e){var t=e.wordId,r=e.wordProps,n=JSON.stringify(r);return fetch(u(t),{body:n,method:"PUT",headers:{"Content-Type":"application/json"}}).then((function(e){return e.json()})).then((function(e){return e})).catch((function(){a.a.error(l)}))}},{key:"delete",value:(s=regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(u(t),{method:"DELETE"});case 2:return r=e.sent,e.abrupt("return",r.json());case 4:case"end":return e.stop()}}),e)})),f=function(){var e=this,t=arguments;return new Promise((function(r,n){var a=s.apply(e,t);function o(e){i(a,r,n,o,c,"next",e)}function c(e){i(a,r,n,o,c,"throw",e)}o(void 0)}))},function(e){return f.apply(this,arguments)})}],r&&c(t.prototype,r),n&&c(t,n),e}()},790:function(e,t,r){"use strict";r.d(t,"b",(function(){return n})),r.d(t,"a",(function(){return a}));var n="0 3px 6px 0 rgba(0,0,0,0.12), 0 0 1px 0 rgba(0,0,0,0.12)",a="4px"},795:function(e,t,r){var n=r(229),a=r(802);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.i,a,""]]);var o={insert:"head",singleton:!1};n(a,o);e.exports=a.locals||{}},802:function(e,t,r){(t=r(230)(!1)).push([e.i,".item-enter {\n    opacity: 0;\n}\n.item-enter-active {\n    opacity: 1;\n    transition: opacity 400ms ease-in;\n}\n.item-exit {\n    opacity: 1;\n}\n.item-exit-active {\n    opacity: 0;\n    transition: opacity 400ms ease-in;\n}\n",""]),e.exports=t},862:function(e,t){},872:function(e,t,r){"use strict";r.r(t),r.d(t,"Words",(function(){return wt}));var n=r(800),a=r.n(n),o=r(0),i=r.n(o),c=r(805),l=r.n(c),u=r(869),s=r(845),f=r(874),d=r(875),p=r(858),m=r.n(p),y=r(125),h=function(e){var t=e.id,r=e.children,n=e.categoryId;return i.a.createElement("div",{draggable:!0,onDragStart:function(e){return e.dataTransfer?(e.dataTransfer.setData("id",t),n&&e.dataTransfer.setData("categoryId",String(n)),null):null}},r)},v=r(322),g=r(24),w=r.n(g),b=r(789),E=r(231),x=r(846),S=r.n(x),j=r(13),O=r(790),I=S.a.Meta,C=j.a.div.withConfig({displayName:"styles__CardBody",componentId:"sc-1paq1cz-0"})(["display:flex;justify-content:space-between;"]),W=j.a.div.withConfig({displayName:"styles__CardImage",componentId:"sc-1paq1cz-1"})(["border-radius:5px;width:150px;height:100px;display:block;background:url(",") center no-repeat;background-size:contain;"],(function(e){return e.img})),A=Object(j.a)(I).withConfig({displayName:"styles__Meta",componentId:"sc-1paq1cz-2"})(["border-radius:5px;width:200px;& .ant-card-meta-title{font-size:20px;margin-bottom:0 !important;}& .ant-card-meta-description{font-size:18px;}"]),k=Object(j.a)(S.a).withConfig({displayName:"styles__WordCard",componentId:"sc-1paq1cz-3"})(["box-shadow:",";border:none !important;& .ant-card-body{height:170px;}"],O.b),_=j.a.div.withConfig({displayName:"styles__IconWrapper",componentId:"sc-1paq1cz-4"})(["color:red;font-size:18px;display:inline-block;cursor:pointer;"]),N=j.a.div.withConfig({displayName:"styles__DeleteWrapper",componentId:"sc-1paq1cz-5"})(["color:#ff3c3c;cursor:pointer;transition:0.5s;&:hover{color:#cc0000;transform:scale(1.1);}& span{margin-left:5px;}"]),D=Object(j.a)(N).withConfig({displayName:"styles__MemorizedWrapper",componentId:"sc-1paq1cz-6"})(["color:#5f5fff;margin-top:10px;&:hover{color:#00009e;}"]),z=Object(j.a)(N).withConfig({displayName:"styles__ForgotWrapper",componentId:"sc-1paq1cz-7"})(["color:#e8a000;margin-top:10px;&:hover{color:#b57d00;}"]);function T(e,t,r,n,a,o,i){try{var c=e[o](i),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,a)}function M(e){return function(){var t=this,r=arguments;return new Promise((function(n,a){var o=e.apply(t,r);function i(e){T(o,n,a,i,c,"next",e)}function c(e){T(o,n,a,i,c,"throw",e)}i(void 0)}))}}var P=function(e){var t=e.id,r=Object(E.a)(),n=r.fetchWordsOffset,a=r.deleteWordsOffset,o=function(){var e=M(regeneratorRuntime.mark((function e(r){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r.stopPropagation(),e.next=3,b.a.delete(t);case 3:e.sent&&(a(t),n(0));case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return i.a.createElement(N,{onClick:o},i.a.createElement(w.a,{type:"delete"}),i.a.createElement("span",null,"Delete"))},F=function(e){var t=e.id,r=Object(E.a)().fetchWordsOffset,n=function(){var e=M(regeneratorRuntime.mark((function e(n){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.stopPropagation(),a={learned:!0},e.next=4,b.a.updateJSON({wordId:t,wordProps:a});case 4:e.sent.id&&r(0);case 6:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return i.a.createElement(D,{onClick:n},i.a.createElement(w.a,{type:"bulb"}),i.a.createElement("span",null,"Memorized"))},L=function(e){var t=e.id,r=Object(E.a)().fetchWordsOffset,n=function(){var e=M(regeneratorRuntime.mark((function e(n){var a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.stopPropagation(),a={learned:!1},e.next=4,b.a.updateJSON({wordId:t,wordProps:a});case 4:e.sent.id&&r(0);case 6:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return i.a.createElement(z,{onClick:n},i.a.createElement(w.a,{type:"reload"}),i.a.createElement("span",null,"Forgot"))},R=function(e){var t=e.wordInfo.id;return i.a.createElement(i.a.Fragment,null,i.a.createElement(P,{id:t}),i.a.createElement(F,{id:t}),i.a.createElement(L,{id:t}))},U=function(e){var t=e.word,r=e.learned;return i.a.createElement("div",null,t," ",r&&i.a.createElement(w.a,{style:{color:"#18d218"},type:"check"}))},q=function(e){var t=e.wordInfo,r=Object(v.a)().showWordsInfo,n=t.id,a=t.word,o=t.translate,c=t.imageSrc,l=t.learned,u=t.category,s="word/".concat(a);return i.a.createElement(h,{key:n,id:String(n),categoryId:null==u?void 0:u.id},i.a.createElement(y.b,{to:s},i.a.createElement(k,null,i.a.createElement(C,null,i.a.createElement("div",null,i.a.createElement(A,{title:i.a.createElement(U,{word:a,learned:l}),description:r?o:null}),i.a.createElement(_,null,i.a.createElement(m.a,{trigger:"click",placement:"bottom",content:i.a.createElement(R,{wordInfo:t})},i.a.createElement("div",null,". . .")))),r&&i.a.createElement(W,{img:c,alt:a})))))},$=r(39),B=r(157);function J(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,a=!1,o=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==c.return||c.return()}finally{if(a)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return G(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return G(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var V=function(e){var t=J(Object(o.useState)(0),2),r=t[0],n=t[1];return Object(o.useEffect)((function(){Object(B.a)(e).then(n)})),[r]},X=j.a.div.withConfig({displayName:"styles__DropContainer",componentId:"mcgme-0"})(["padding:10px;"]),H=function(e){var t=e.children,r=e.onDropEnd;return i.a.createElement(X,{onDrop:function(e){var t=e.dataTransfer.getData("id"),n=e.dataTransfer.getData("categoryId");r(t,n)},onDragOver:function(e){e.preventDefault()}},t)},K=j.a.div.withConfig({displayName:"styles__WordContainer",componentId:"h1pwr5-0"})(["margin-bottom:1rem;box-shadow:",";"],(function(e){return e.areSeveralWords?"0 1px 1px rgba(0, 0, 0, 0.15), 0 10px 0px -5px #fff,0 10px 1px -4px rgba(0, 0, 0, 0.15), 0 20px 0 -10px #fff,0 20px 1px -9px rgba(0, 0, 0, 0.15);":"none"})),Q=function(e){var t=e.children,r=e.areSeveralWords;return i.a.createElement(K,{areSeveralWords:r},t)},Y=r(859),Z=r.n(Y),ee="ALL",te="DRAFT",re="LEARNED",ne="UNLEARNED";function ae(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var oe=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,r,n;return t=e,n=[{key:"getFilter",value:function(){return window.localStorage.getItem("filter")}},{key:"setFilter",value:function(e){window.localStorage.setItem("filter",e)}}],(r=null)&&ae(t.prototype,r),n&&ae(t,n),e}(),ie=j.a.div.withConfig({displayName:"styles__FilterWordsWrapper",componentId:"sc-1jtwhtj-0"})(["margin-bottom:10px;margin-top:10px;margin-left:10px;"]),ce=ee,le=re,ue=ne,se=te,fe=function(e){var t=e.showMemoizedWords,r=e.showUnlearnedWords,n=e.showAllWords,a=e.showDraftWords,o=oe.getFilter()||ce;return i.a.createElement(ie,null,i.a.createElement(Z.a.Group,{buttonStyle:"solid",onChange:function(e){var o,i=null==e||null===(o=e.target)||void 0===o?void 0:o.value;({ALL:n,LEARNED:t,UNLEARNED:r,DRAFT:a})[i]()},defaultValue:o},i.a.createElement(Z.a.Button,{value:ce},"All"),i.a.createElement(Z.a.Button,{value:le},"Memoized"),i.a.createElement(Z.a.Button,{value:ue},"Unlearned"),i.a.createElement(Z.a.Button,{value:se},"Draft")))};function de(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,a=!1,o=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==c.return||c.return()}finally{if(a)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return pe(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return pe(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function pe(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var me=ee,ye=re,he=ne,ve=te,ge=function(e,t){switch(t.type){case me:return t.data;case ye:return t.data.filter((function(e){return e.learned&&!e.draft}));case he:return t.data.filter((function(e){return!e.learned&&!e.draft}));case ve:return t.data.filter((function(e){return e.draft}));default:throw e}},we=function(e){var t=de(Object(o.useReducer)(ge,e),2),r=t[0],n=t[1];!function(e,t){Object(o.useEffect)((function(){var r=oe.getFilter();e(r?{type:r,data:t}:{type:me,data:t})}),[t.length])}(n,e);return{filteredWords:r,showDraftWords:function(e){oe.setFilter(ve),n({type:ve,data:e})},showMemoizedWords:function(e){oe.setFilter(ye),n({type:ye,data:e})},showUnlearnedWords:function(e){oe.setFilter(he),n({type:he,data:e})},showAllWords:function(e){oe.setFilter(me),n({type:me,data:e})},setWords:function(e){var t=oe.getFilter();t&&n({type:t,data:e})}}},be=(r(862),r(69)),Ee=r.n(be);function xe(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,a=!1,o=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==c.return||c.return()}finally{if(a)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return Se(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Se(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Se(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var je=function(){var e=xe(Object(o.useState)((function(){return window.localStorage.getItem("words-order")||"DESC"})),2),t=e[0],r=e[1];return[t,function(){var e,t=(e={DESC:"ASC",ASC:"DESC"}[window.localStorage.getItem("words-order")||"DESC"],window.localStorage.setItem("words-order",e),e);r(t)}]};function Oe(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,a=!1,o=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==c.return||c.return()}finally{if(a)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return Ie(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Ie(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ie(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var Ce={DESC:"  Last words",ASC:"  First words"},We=function(){var e=Oe(je(),2),t=e[0],r=e[1];return i.a.createElement(i.a.Fragment,null,i.a.createElement(Ee.a,{onClick:r},"Change words order"),Ce[t])},Ae=r(863),ke=r.n(Ae),_e=r(239),Ne=(r(795),r(799)),De=r.n(Ne),ze=Object(j.a)(De.a).withConfig({displayName:"styles__WordsWrapper",componentId:"nliyug-0"})(["display:flex;flex-wrap:wrap;"]),Te=j.a.div.withConfig({displayName:"styles__CategoriesLayout",componentId:"nliyug-1"})(["display:flex;flex-wrap:wrap;margin:5px;"]),Me=j.a.div.withConfig({displayName:"styles__CategoryWrapper",componentId:"nliyug-2"})(["max-width:367px;margin:8px;& > .ant-collapse{box-shadow:",";}"],O.b),Pe=ke.a.Panel,Fe=function(e){return e.words.map((function(e){return i.a.createElement(a.a,{key:e.id,xs:24,sm:24,md:24,lg:24,xl:24},i.a.createElement(Q,{areSeveralWords:!1},i.a.createElement(q,{wordInfo:e})))}))},Le=function(e){var t=e.id,r=Object(_e.a)().deleteCategory;return i.a.createElement(w.a,{type:"close",onClick:function(e){e.stopPropagation(),r(t)}})},Re=function(){var e=Object(_e.a)(),t=e.categories,r=e.fetchCategories,n=e.linkCategories;Object(o.useEffect)((function(){r()}),[]);return t.length?i.a.createElement(Te,null,i.a.createElement(d.a,{style:{width:"100%",display:"flex",flexWrap:"wrap",height:"190px",overflowX:"hidden"}},t.map((function(e){var t=e.id,r=e.name,a=e.words;return i.a.createElement(f.a,{key:t,timeout:250,classNames:"item"},i.a.createElement(Me,{key:t},i.a.createElement(ke.a,{bordered:!1,expandIconPosition:"left"},i.a.createElement(Pe,{key:t,header:r,extra:i.a.createElement(Le,{id:t})},i.a.createElement(H,{onDropEnd:function(e){return function(e){var t=e.wordId,r=e.categoryId;n(t,r)}({wordId:String(e),categoryId:String(t)})}},i.a.createElement(ze,{gutter:12},!!a.length&&i.a.createElement(Fe,{words:a})))))))})))):null};function Ue(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,a=!1,o=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==c.return||c.return()}finally{if(a)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return qe(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return qe(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function qe(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var $e=r(159),Be=r.n($e),Je=r(109),Ge=r.n(Je),Ve=r(60),Xe=r.n(Ve),He=r(19),Ke=r(160),Qe=r(324),Ye=r(320),Ze=j.a.div.withConfig({displayName:"styles__CheckWordWrapper",componentId:"ft2ste-0"})(["display:flex;margin-left:10px;width:355px;"]),et=Object(j.a)(Ee.a).withConfig({displayName:"styles__CheckButton",componentId:"ft2ste-1"})(["margin-left:15px;"]),tt=r(108),rt=r(240);function nt(e,t,r,n,a,o,i){try{var c=e[o](i),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,a)}var at=Xe.a.confirm,ot=function(){var e,t,r=Object(He.g)(),n=Object(tt.a)(),a=n.openModal,o=n.visible,c=n.closeModal,l=Object(Ke.a)({initialValues:{checkWord:""},onSubmit:(e=regeneratorRuntime.mark((function e(t){var n,o;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(Ye.a)(t.checkWord);case 2:return n=e.sent,e.next=5,Object(Qe.a)(t.checkWord);case 5:if(!(o=e.sent).length){e.next=9;break}return Object(Qe.b)(o,r),e.abrupt("return");case 9:if(!n.length){e.next=12;break}return Object(Ye.b)(n,r),e.abrupt("return");case 12:at({title:"This is a new word",onOk:function(){a()}});case 13:case"end":return e.stop()}}),e)})),t=function(){var t=this,r=arguments;return new Promise((function(n,a){var o=e.apply(t,r);function i(e){nt(o,n,a,i,c,"next",e)}function c(e){nt(o,n,a,i,c,"throw",e)}i(void 0)}))},function(e){return t.apply(this,arguments)})}),u=l.handleSubmit,s=l.handleChange;return i.a.createElement(i.a.Fragment,null,i.a.createElement(Be.a,{onSubmit:u},i.a.createElement(Ze,null,i.a.createElement(Ge.a,{name:"checkWord",onChange:s}),i.a.createElement(et,{type:"primary",htmlType:"submit"},"Check word"))),i.a.createElement(rt.a,{visible:o,closeModal:c}))},it=j.a.div.withConfig({displayName:"styles__LearnedWords",componentId:"sc-91z9mo-0"})(["color:#001529;font-size:16px;"]),ct=Object(o.memo)((function(e){var t=e.words;return i.a.createElement(it,null,"Words: ".concat(t))})),lt=j.a.span.withConfig({displayName:"styles__LearnedWords",componentId:"sc-1m2f0jl-0"})(["color:#001529;font-size:16px;"]);function ut(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,a=!1,o=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==c.return||c.return()}finally{if(a)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return st(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return st(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function st(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var ft=function(){var e=ut(V("".concat($.a,"/words/count/learned")),1)[0];return i.a.createElement(lt,null,"Learned Words: ".concat(e))},dt=Object(j.a)(De.a).withConfig({displayName:"styles__WordWrapper",componentId:"sc-1wa8yzp-0"})(["display:flex;flex-wrap:wrap;"]),pt=j.a.div.withConfig({displayName:"styles__LearnedWordsLayout",componentId:"sc-1wa8yzp-1"})(["display:flex;justify-content:space-between;"]),mt=j.a.div.withConfig({displayName:"styles__ChangeWordsOrderLayout",componentId:"sc-1wa8yzp-2"})(["margin-top:5px;margin-left:10px;"]),yt=j.a.div.withConfig({displayName:"styles__WordsCountContainer",componentId:"sc-1wa8yzp-3"})(["margin-top:5px;margin-right:10px;@media (max-width:480px){display:none;}"]);function ht(e,t,r,n,a,o,i){try{var c=e[o](i),l=c.value}catch(e){return void r(e)}c.done?t(l):Promise.resolve(l).then(n,a)}function vt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,a=!1,o=void 0;try{for(var i,c=e[Symbol.iterator]();!(n=(i=c.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,o=e}finally{try{n||null==c.return||c.return()}finally{if(a)throw o}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return gt(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return gt(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function gt(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var wt=Object(o.memo)((function(){var e=Object(_e.a)(),t=e.categories,r=e.unlinkCategories,n=vt(V("".concat($.a,"/words/count")),1)[0],c=Object(E.a)(),p=c.wordsOffset,m=c.fetchWordsOffset,y=vt(je(),1)[0],h=p.filter((function(e){return!e.category})),v=we(p),g=v.setWords,w=v.showAllWords,b=v.showDraftWords,x=v.filteredWords,S=v.showMemoizedWords,j=v.showUnlearnedWords;!function(e,t,r){var n=Ue(Object(o.useState)(0),2),a=n[0],i=n[1],c=Object(E.a)().fetchWordsOffset;Object(o.useEffect)((function(){(!e.length||e.length<20)&&(c(a,r),setTimeout((function(){return i(a+1)}),10))}),[a])}(x,0,y),Object(u.a)((function(){m(0,y),g(h)}),[p,t]);var O=function(){var e,t=(e=regeneratorRuntime.mark((function e(t,n){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!n){e.next=3;break}return e.next=3,r(t,n);case 3:case"end":return e.stop()}}),e)})),function(){var t=this,r=arguments;return new Promise((function(n,a){var o=e.apply(t,r);function i(e){ht(o,n,a,i,c,"next",e)}function c(e){ht(o,n,a,i,c,"throw",e)}i(void 0)}))});return function(e,r){return t.apply(this,arguments)}}();return i.a.createElement(i.a.Fragment,null,i.a.createElement(pt,null,i.a.createElement(fe,{showAllWords:function(){return w(h)},showDraftWords:function(){return b(h)},showMemoizedWords:function(){return S(h)},showUnlearnedWords:function(){return j(h)}}),i.a.createElement(yt,null,!l()(p)&&i.a.createElement(ct,{words:n}),!l()(p)&&i.a.createElement(ft,null))),i.a.createElement(ot,null),i.a.createElement(Re,null),i.a.createElement(mt,null,i.a.createElement(We,null)),i.a.createElement(H,{onDropEnd:function(e,t){return O(e,t)}},i.a.createElement(dt,{gutter:12},i.a.createElement(d.a,{style:{width:"100%"}},i.a.createElement(s.a,{next:function(){m(Math.ceil(p.length/20),y)},loader:i.a.createElement("h4",null,"Loading..."),dataLength:p.length,hasMore:p.length!==n},!l()(p)&&x.map((function(e){return i.a.createElement(f.a,{key:e.id,timeout:500,classNames:"item"},i.a.createElement(a.a,{key:e.id,xs:24,sm:24,md:8,lg:8,xl:6},i.a.createElement(Q,{areSeveralWords:!1},i.a.createElement(q,{wordInfo:e}))))})))))))}));t.default=wt}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,