(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{783:function(n,t,e){"use strict";e.d(t,"a",(function(){return s}));var r=e(163),o=e.n(r),i=e(52);function a(n,t,e,r,o,i,a){try{var c=n[i](a),u=c.value}catch(n){return void e(n)}c.done?t(u):Promise.resolve(u).then(r,o)}function c(n,t){for(var e=0;e<t.length;e++){var r=t[e];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}var u="Can't upload image",l=function(n){return"".concat(i.a,"/words/").concat(n)},s=function(){function n(){!function(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n)}var t,e,r,i,s;return t=n,e=null,r=[{key:"update",value:function(n){var t=n.wordId,e=n.body;fetch(l(t),{body:e,method:"PUT"}).then((function(n){return n.json()})).then((function(n){return n.id&&o.a.success("Image updated successfully"),n})).catch((function(){o.a.error(u)}))}},{key:"updateJSON",value:function(n){var t=n.wordId,e=n.wordProps,r=JSON.stringify(e);return fetch(l(t),{body:r,method:"PUT",headers:{"Content-Type":"application/json"}}).then((function(n){return n.json()})).then((function(n){return n})).catch((function(){o.a.error(u)}))}},{key:"delete",value:(i=regeneratorRuntime.mark((function n(t){var e;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,fetch(l(t),{method:"DELETE"});case 2:return e=n.sent,n.abrupt("return",e.json());case 4:case"end":return n.stop()}}),n)})),s=function(){var n=this,t=arguments;return new Promise((function(e,r){var o=i.apply(n,t);function c(n){a(o,e,r,c,u,"next",n)}function u(n){a(o,e,r,c,u,"throw",n)}c(void 0)}))},function(n){return s.apply(this,arguments)})}],e&&c(t.prototype,e),r&&c(t,r),n}()},784:function(n,t,e){"use strict";e.d(t,"b",(function(){return r})),e.d(t,"a",(function(){return o}));var r="0 3px 6px 0 rgba(0,0,0,0.12), 0 0 1px 0 rgba(0,0,0,0.12)",o="4px"},789:function(n,t,e){var r=e(226),o=e(796);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[n.i,o,""]]);var i={insert:"head",singleton:!1};r(o,i);n.exports=o.locals||{}},790:function(n,t,e){"use strict";e.d(t,"a",(function(){return l}));var r=e(0),o=e.n(r),i=e(24),a=e.n(i),c=e(17),u=Object(c.a)(a.a).withConfig({displayName:"styles__Icon",componentId:"sc-1ins3vw-0"})(["margin:0 10px;"]),l=function(n){var t=n.word;return o.a.createElement(u,{theme:"twoTone",type:"sound",onClick:function(){window.responsiveVoice.speak(t)}})}},796:function(n,t,e){(t=e(227)(!1)).push([n.i,".item-enter {\n    opacity: 0;\n}\n.item-enter-active {\n    opacity: 1;\n    transition: opacity 400ms ease-in;\n}\n.item-exit {\n    opacity: 1;\n}\n.item-exit-active {\n    opacity: 0;\n    transition: opacity 400ms ease-in;\n}\n",""]),n.exports=t},867:function(n,t,e){"use strict";e.r(t),e.d(t,"Training",(function(){return _}));var r=e(0),o=e.n(r),i=e(869),a=e(868),c=e(289);function u(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(n)))return;var e=[],r=!0,o=!1,i=void 0;try{for(var a,c=n[Symbol.iterator]();!(r=(a=c.next()).done)&&(e.push(a.value),!t||e.length!==t);r=!0);}catch(n){o=!0,i=n}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return e}(n,t)||function(n,t){if(!n)return;if("string"==typeof n)return l(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);"Object"===e&&n.constructor&&(e=n.constructor.name);if("Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return l(n,t)}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}var s=e(67),f=e.n(s),d=e(24),p=e.n(d),y=e(783),m=e(790),v=e(17),h=e(784),w=v.a.div.withConfig({displayName:"styles__Wrapper",componentId:"bw4qdk-0"})(["text-align:center;background:#fff;padding:33px 15px;border-radius:",";box-shadow:0 0 0 1px rgba(63,63,68,0.05),0 1px 3px 0 rgba(63,63,68,0.15);display:inline-block;margin:0 auto;font-size:21px;width:500px;@media (max-width:480px){max-width:500px;margin:15px;}"],h.a),b=v.a.div.withConfig({displayName:"styles__Container",componentId:"bw4qdk-1"})(["display:flex !important;align-items:center;height:94vh;"]),g=v.a.div.withConfig({displayName:"styles__ButtonsWrapper",componentId:"bw4qdk-2"})(["display:flex;justify-content:space-between;width:175px;margin:0 auto;margin-top:20px;"]),x=v.a.div.withConfig({displayName:"styles__Word",componentId:"bw4qdk-3"})(["color:#000;margin-right:10px;"]),E=v.a.div.withConfig({displayName:"styles__Description",componentId:"bw4qdk-4"})(["color:#909090;"]),j=v.a.div.withConfig({displayName:"styles__IconWordLayout",componentId:"bw4qdk-5"})(["display:flex;justify-content:center;align-items:center;"]);function k(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(n)))return;var e=[],r=!0,o=!1,i=void 0;try{for(var a,c=n[Symbol.iterator]();!(r=(a=c.next()).done)&&(e.push(a.value),!t||e.length!==t);r=!0);}catch(n){o=!0,i=n}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return e}(n,t)||function(n,t){if(!n)return;if("string"==typeof n)return O(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);"Object"===e&&n.constructor&&(e=n.constructor.name);if("Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return O(n,t)}(n,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function O(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}var I=function(n){var t=n.id,e=n.word,i=n.translate,a=n.context,c=n.deleteTrainingWord,u=k(Object(r.useState)(!1),2),l=u[0],s=u[1];Object(r.useEffect)((function(){window.responsiveVoice.speak(e)}),[]);var d=function(){y.a.updateJSON({wordId:t,wordProps:{learned:!0}}),c(t)};!function(n,t){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:window,o=Object(r.useRef)();Object(r.useEffect)((function(){o.current=t}),[t]),Object(r.useEffect)((function(){if(e&&e.addEventListener){var t=function(n){return o.current(n)};return e.addEventListener(n,t),function(){e.removeEventListener(n,t)}}}),[n,e])}("keydown",(function(n){var e=n.key;"ArrowRight"===e&&c(t),"ArrowLeft"===e&&d()}));return o.a.createElement(b,null,o.a.createElement(w,null,o.a.createElement(j,null,o.a.createElement(x,null,e),o.a.createElement(m.a,{word:e}),o.a.createElement(p.a,{theme:"twoTone",type:"question-circle",onClick:function(){s((function(n){return!n}))}})),l&&o.a.createElement(E,null,i),o.a.createElement(E,null,a),o.a.createElement(g,null,o.a.createElement(f.a,{onClick:d,size:"large",type:"primary"},"Know"),o.a.createElement(f.a,{onClick:function(){return c(t)},size:"large",type:"danger"},"Missed"))))};e(789);function C(){return(C=Object.assign||function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r])}return n}).apply(this,arguments)}var S=function(n,t){return 0===t},_=function(){var n=function(){var n=Object(c.a)(),t=n.words,e=n.fetchWords,o=u(Object(r.useState)([]),2),i=o[0],a=o[1];return Object(r.useEffect)((function(){e();var n=t.filter((function(n){return!n.learned}));a(n)}),[t.length]),{trainingWords:i,setTrainingWords:a}}(),t=n.trainingWords,e=n.setTrainingWords,l=function(n){e(t.filter((function(t){return t.id!==n})))};return t?o.a.createElement(i.a,null,t.filter(S).map((function(n){return o.a.createElement(a.a,{key:n.id,timeout:500,classNames:"item"},o.a.createElement(I,C({},n,{deleteTrainingWord:l})))}))):null};t.default=_}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,